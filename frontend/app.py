import streamlit as st
import asyncio
import httpx
from faststream import FastStream
from faststream.kafka import KafkaBroker
from faststream.security import SASLPlaintext
from config.logger import logger
from config.settings import (
    KAFKA_URL,
    KAFKA_PASSWORD,
    KAFKA_USERNAME
)
from s3.operations import download_file
# –û—Ç—Å—é–¥–∞ 
security = SASLPlaintext(
    username=KAFKA_USERNAME,
    password=KAFKA_PASSWORD,
    use_ssl=False
)
broker = KafkaBroker(
    KAFKA_URL,
    security=security
    )
stream = FastStream(broker)
# –¥–æ —Å—é–¥–∞ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å



async def post_request(update: dict) -> None:
    """–ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è JSON –≤ —Ç–æ–ø–∏–∫ request

    Args:
        update (dict): JSON
    """
    await broker.publish(update, topic="request", partition=4)

def add_to_basket():
    pass


def get_all_products():
    return [
        {"name": "Product 1", "price": 100, "description": "Description 1"},
        {"name": "Product 2", "price": 200, "description": "Description 2"},
        {"name": "Product 3", "price": 300, "description": "Description 3"},
        {"name": "Product 4", "price": 400, "description": "Description 4"},
        {"name": "Product 5", "price": 500, "description": "Description 5"},
        {"name": "Product 6", "price": 600, "description": "Description 6"},
    ]
    


async def main():
    st.set_page_config(page_title="Shop", page_icon="üõí", layout="wide", initial_sidebar_state="auto")
    st.markdown(
        r"""
        <style>
        .stDeployButton {
                visibility: hidden;
            }
        </style>
        """, unsafe_allow_html=True
    )

    if "authenticated" not in st.session_state:
        st.session_state.authenticated = False
        st.session_state.username = None
        st.session_state.role = None

    if st.session_state.authenticated:
        st.sidebar.button("Logout")
        st.sidebar.write(f"Welcome, {st.session_state.username}!")
        st.sidebar.write(f"Role: {st.session_state.role}")

        tab1, tab2, tab3 = st.tabs([
            "–í—Å–µ —Ç–æ–≤–∞—Ä—ã", "–¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", "–ö–æ—Ä–∑–∏–Ω–∞"
        ])

        with tab1:
            st.header("–í—Å–µ —Ç–æ–≤–∞—Ä—ã")
            products = get_all_products()
            for i in range(0, len(products), 3):
                cols = st.columns(3)
                for col, product in zip(cols, products[i:i+3]):
                    with col:
                        st.image("image.png")
                        st.subheader(product["name"])
                        st.write(f"{product['price']}‚ÇΩ")
                        if st.button("–í –∫–æ—Ä–∑–∏–Ω—É", key=f"add_{product['name']}"):
                            # add_to_basket(product['id'])
                            pass

        with tab2:
            st.header("–¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            products_list = ['PC - –ì–∞—Ä–Ω–∏—Ç—É—Ä—ã/–ù–∞—É—à–Ω–∏–∫–∏', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - PS2', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - PS3', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - PS4',
                             '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - PSP', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - PSVita', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - XBOX 360',
                             '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã - XBOX ONE', '–ë–∏–ª–µ—Ç—ã (–¶–∏—Ñ—Ä–∞)', '–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞', '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - PS2',
                             '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - PS3', '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - PS4', '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - PSP',
                             '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - PSVita', '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - XBOX 360', '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - XBOX ONE',
                             '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–Ω—Å–æ–ª–∏ - –ü—Ä–æ—á–∏–µ', '–ò–≥—Ä—ã - PS2', '–ò–≥—Ä—ã - PS3', '–ò–≥—Ä—ã - PS4', '–ò–≥—Ä—ã - PSP',
                             '–ò–≥—Ä—ã - PSVita', '–ò–≥—Ä—ã - XBOX 360', '–ò–≥—Ä—ã - XBOX ONE', '–ò–≥—Ä—ã - –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –∏–≥—Ä',
                             '–ò–≥—Ä—ã Android - –¶–∏—Ñ—Ä–∞', '–ò–≥—Ä—ã MAC - –¶–∏—Ñ—Ä–∞', '–ò–≥—Ä—ã PC - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è',
                             '–ò–≥—Ä—ã PC - –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è', '–ò–≥—Ä—ã PC - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è', '–ò–≥—Ä—ã PC - –¶–∏—Ñ—Ä–∞',
                             '–ö–∞—Ä—Ç—ã –æ–ø–ª–∞—Ç—ã (–ö–∏–Ω–æ, –ú—É–∑—ã–∫–∞, –ò–≥—Ä—ã)', '–ö–∞—Ä—Ç—ã –æ–ø–ª–∞—Ç—ã - Live!',
                             '–ö–∞—Ä—Ç—ã –æ–ø–ª–∞—Ç—ã - Live! (–¶–∏—Ñ—Ä–∞)', '–ö–∞—Ä—Ç—ã –æ–ø–ª–∞—Ç—ã - PSN', '–ö–∞—Ä—Ç—ã –æ–ø–ª–∞—Ç—ã - Windows (–¶–∏—Ñ—Ä–∞)',
                             '–ö–∏–Ω–æ - Blu-Ray', '–ö–∏–Ω–æ - Blu-Ray 3D', '–ö–∏–Ω–æ - Blu-Ray 4K', '–ö–∏–Ω–æ - DVD',
                             '–ö–∏–Ω–æ - –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ', '–ö–Ω–∏–≥–∏ - –ê—Ä—Ç–±—É–∫–∏, —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏', '–ö–Ω–∏–≥–∏ - –ê—É–¥–∏–æ–∫–Ω–∏–≥–∏',
                             '–ö–Ω–∏–≥–∏ - –ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ (–¶–∏—Ñ—Ä–∞)', '–ö–Ω–∏–≥–∏ - –ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ 1–°', '–ö–Ω–∏–≥–∏ - –ë–∏–∑–Ω–µ—Å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
                             '–ö–Ω–∏–≥–∏ - –ö–æ–º–∏–∫—Å—ã, –º–∞–Ω–≥–∞', '–ö–Ω–∏–≥–∏ - –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
                             '–ö–Ω–∏–≥–∏ - –ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã 1–°', '–ö–Ω–∏–≥–∏ - –û—Ç–∫—Ä—ã—Ç–∫–∏',
                             '–ö–Ω–∏–≥–∏ - –ü–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ö–Ω–∏–≥–∏ - –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–∏',
                             '–ö–Ω–∏–≥–∏ - –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ö–Ω–∏–≥–∏ - –¶–∏—Ñ—Ä–∞',
                             '–ú—É–∑—ã–∫–∞ - CD –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞', '–ú—É–∑—ã–∫–∞ - CD —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
                              '–ú—É–∑—ã–∫–∞ - MP3', '–ú—É–∑—ã–∫–∞ - –í–∏–Ω–∏–ª', '–ú—É–∑—ã–∫–∞ - –ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ',
                             '–ú—É–∑—ã–∫–∞ - –ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è', '–ü–æ–¥–∞—Ä–∫–∏ - –ê—Ç—Ä–∏–±—É—Ç–∏–∫–∞', '–ü–æ–¥–∞—Ä–∫–∏ - –ì–∞–¥–∂–µ—Ç—ã, —Ä–æ–±–æ—Ç—ã, —Å–ø–æ—Ä—Ç',
                             '–ü–æ–¥–∞—Ä–∫–∏ - –ú—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏', '–ü–æ–¥–∞—Ä–∫–∏ - –ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã',
                             '–ü–æ–¥–∞—Ä–∫–∏ - –ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ)', '–ü–æ–¥–∞—Ä–∫–∏ - –û—Ç–∫—Ä—ã—Ç–∫–∏, –Ω–∞–∫–ª–µ–π–∫–∏',
                             '–ü–æ–¥–∞—Ä–∫–∏ - –†–∞–∑–≤–∏—Ç–∏–µ', '–ü–æ–¥–∞—Ä–∫–∏ - –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, —É—Å–ª—É–≥–∏', '–ü–æ–¥–∞—Ä–∫–∏ - –°—É–≤–µ–Ω–∏—Ä—ã',
                             '–ü–æ–¥–∞—Ä–∫–∏ - –°—É–≤–µ–Ω–∏—Ä—ã (–≤ –Ω–∞–≤–µ—Å–∫—É)', '–ü–æ–¥–∞—Ä–∫–∏ - –°—É–º–∫–∏, –ê–ª—å–±–æ–º—ã, –ö–æ–≤—Ä–∏–∫–∏ –¥/–º—ã—à–∏',
                             '–ü–æ–¥–∞—Ä–∫–∏ - –§–∏–≥—É—Ä–∫–∏', '–ü—Ä–æ–≥—Ä–∞–º–º—ã - 1–°:–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ 8', '–ü—Ä–æ–≥—Ä–∞–º–º—ã - MAC (–¶–∏—Ñ—Ä–∞)',
                             '–ü—Ä–æ–≥—Ä–∞–º–º—ã - –î–ª—è –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞', '–ü—Ä–æ–≥—Ä–∞–º–º—ã - –î–ª—è –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞ (–¶–∏—Ñ—Ä–∞)',
                             '–ü—Ä–æ–≥—Ä–∞–º–º—ã - –û–±—É—á–∞—é—â–∏–µ', '–ü—Ä–æ–≥—Ä–∞–º–º—ã - –û–±—É—á–∞—é—â–∏–µ (–¶–∏—Ñ—Ä–∞)', '–°–ª—É–∂–µ–±–Ω—ã–µ',
                             '–°–ª—É–∂–µ–±–Ω—ã–µ - –ë–∏–ª–µ—Ç—ã', '–ß–∏—Å—Ç—ã–µ –Ω–æ—Å–∏—Ç–µ–ª–∏ (—à–ø–∏–ª—å)', '–ß–∏—Å—Ç—ã–µ –Ω–æ—Å–∏—Ç–µ–ª–∏ (—à—Ç—É—á–Ω—ã–µ)',
                             '–≠–ª–µ–º–µ–Ω—Ç—ã –ø–∏—Ç–∞–Ω–∏—è']
        selected_category = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", products_list)
        if selected_category:
            # products = get_all_products_from_category(selected_category)
            products = get_all_products()
            for i in range(0, len(products), 3):
                cols = st.columns(3)
                for col, product in zip(cols, products[i:i + 3]):
                    with col:
                        st.image("image.png")
                        st.subheader(product["name"])
                        st.write(f"{product['price']}‚ÇΩ")
                        if st.button("–í –∫–æ—Ä–∑–∏–Ω—É", key=f"add_category{product['name']}"):
                            # add_to_basket(product['id'])
                            pass

        with tab3:
            st.header("–ö–æ—Ä–∑–∏–Ω–∞")
            basket_products = get_all_products()
            for i in range(0, len(basket_products), 3):
                cols = st.columns(3)
                for col, product in zip(cols, basket_products[i:i+3]):
                    with col:
                        st.image("image.png")
                        st.subheader(product["name"])
                        st.write(f"{product['price']}‚ÇΩ")
            if st.button("–û–ø–ª–∞—Ç–∏—Ç—å", key=f"pay"):
                pass

    else:
        tab1_1, tab1_2 = st.tabs([
            "Log in", "Sign In"
        ])

        with tab1_1:
            st.title("Login")
            username = st.text_input("Username")
            password = st.text_input("Password", type="password")
            if st.button("Login"):
                '''async with httpx.AsyncClient() as client:
                    resp = await client.post(
                        "https://localhost:8000/login",
                        json={
                            "username": username,
                            "email": None,
                            "password": password
                        })'''
                st.session_state.authenticated = True
                st.session_state.username = username

        with tab1_2:
            st.title("Sign In")
            username = st.text_input("Username", key="sign_in_user_name")
            email = st.text_input("Email")
            password = st.text_input("Password", type="password", key="sign_in_password")
            if st.button("Sign In"):
                '''async with httpx.AsyncClient() as client:
                    resp = await client.post(
                        "https://localhost:8000/signin",
                        json={
                            "username": username,
                            "email": email,
                            "password": password
                        })'''
                st.session_state.authenticated = True
                st.session_state.username = username


if __name__ == "__main__":
    asyncio.run(main())
